FROM > WHERE > GROUP BY > HAVING > SELECT > ORDER BY


NTILE (4) over (order by SUM( 판매금액 )
(해설) NTIL() 함수는 대상 값을 NTIL(4)에 명시된 값만큼 분할한 결과를 출력한다. 
지정된 수를 버킷이라고 하고, 버킷 수 만큼 분할하여 표현된다. 
위 예제에서는 NTIL(4)이므로 위 결과를 보면 전체 등급(버킷)을 4로 분할한걸로 알수 있다.


(가) replace(phone_number, '.', '-')
(나) translate(phone_number,'0123456789','jQWETa$%*u') (해설) replace 함수를 이용하여 특정 문자를 다른 문자로 대체할 수 있고, 
유사한 translate 함수를 이용하여 특정 패턴의 모든 글자를 임의의 문자('jQWETa$%*u')로 변환 할 수 있다.


CUBE 연산자는 일반적으로 교차 분석 보고서에 사용되는 결과 집합을 생성하는데 사용한다. 
또한, CUBE는 GROUP BY절에 지정된 가능한 모든 그룹화 조합의 소계와 총계를 생성한다


계층형 쿼리는 그 구조 형태가 트리 구조를 나타낸다. 따라서, 각 로우를 노드라고 보고 최상위 노드를 루트노드, 최하위 노드를 리프노드라고 한다.
CONNECTY_BY_ISLEAF는 각 로우(행)가 최하위 리프노드이면 1 아니면 0을 반환한다.


AL16UTF16 의 캐릭터셋은 호랑이 , 개 등의 ㄱ ㅎ 식으로 크기를 정한다



계층형 질의문의 Level은 문제의 설명처럼 계층 구조의 행 순위나 레벨을 명시적으로 표시할 수 있다. 
이렇게 하면 보고서를 보다 쉽게 읽을 수 있게 된다. 
Level은 오라클에서 실행되는 모든 쿼리 내에서 사용 가능한 pseudocolumn 으로 트리 내에서 
어떤 단계(Level)에 있는지를 나타내는 정수 값이다. 
Level은 계층형 쿼리에서만 값을 갖고 일반 쿼리에서는 0 값을 갖는다.


결합인덱스의 선행 칼럼은 사용된 조건이 어떤 연산 처리를 하는지에 따라 결정된다. 
일반적으로 점조건(=, IN)과 선분조건(like, between 등)일 경우 처리 범위를 줄일 수 있는 점 조건이 선행칼럼으로 적합하다. 
따라서, 위 조건에서 제품번호 = :data1 과 고객번호 IN ('1011','2022') 가 해당된다


일반적으로 동등조인 수행 시 조인에 사용되는 테이블을 연결할 수 있는 조인 조건을 
적합하게 사용하지 않게 되면 카티전 곱이 발생하게 된다. 따라서, 
불필요하게 많은 정보를 연결하여 추출하는 카티전 곱을 피하려면 N개의 테이블 조인 시 반드시 N-1개의 조인조건을 지정해야 한다. 
따라서, 4개의 테이블 조인이므로 4-1=3개의 조건을 지정해야 카티전 곱을 피할 수 있다.

일반적으로 칼럼에 포함된 null 값은 집계함수에서 사용되지 않는다. 
AVG(COL2)를 사용하면 합/N의 N=3이 되고 AVG(NVL(COL2,0))으로 처리하게 되면 합/N의 N=5가 된다. 
따라서, AVG(NVL(COL2,0))은 240이 되고 COUNT(COL2)는 NULL을 제외한 개수이기 때문에 3이 되므로 243이 된다.


regexp_like () 함수를 이용하여 like 연산자의 확장된 표현을 할 수 있다 정규 표현식에서 제공하는
메타문자 형식을 regexp_like 함수와 함께 사용하면 보기처럼 간소화된 표현을 할 수 있다
regexp_like(ename, '(NE|IN)');



ORDERED 힌트는 FROM 절에 작성한 순서대로 읽으라는 의미이고, 
LEADING(E)는 E 라는 ALIAS 테이블을 우선적(Driving table)으로 읽고 실행하라는 의미이다. 
그리고, USE_NL 힌트를 통해 Nested loop 조인 대상을 지정하게 된다.
