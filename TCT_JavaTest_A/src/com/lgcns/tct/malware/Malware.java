package com.lgcns.tct.malware;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Malware {
	/**
	 * 1단계 악성코드 제거
	 * 
     * @param		inputData				List		입력데이터(코드 문자열 목록)
     * @return								List		1단계 악성코드가 제거된 문자열 목록
	 */
	public List<String> getFirstCode(List<String> inputData){
		List<String> firstCodeNameList = null;
		//////////////////////여기부터 구현 (1) ---------------->
		
		String[] array = inputData.stream().filter(o -> {
			if(o.indexOf('.') != -1) {
				return true;
			}
			return false;
		}).toArray(String[]::new);
		firstCodeNameList = Arrays.asList(array);
		///////////////////////////// <-------------- 여기까지 구현 (2)
		return firstCodeNameList;
	}
	
	/**
	 * 2단계 악성코드 제거
	 * 
     * @param		firstCodeNameList			List		1단계 악성코드가 제거된 문자열 목록
     * @return									List		2단계 악성코드가 제거된 문자열 목록
	 */
	public List<String> getSecondCode(List<String> firstCodeNameList){
		List<String> secondCodeNameList = null;
		//////////////////////여기부터 구현 (2) ---------------->
		
		String[] array = firstCodeNameList.stream().filter(o -> {
			String[] split = o.split("\\.");
			int aindex = split[0].indexOf('a');
			int xindex = split[0].indexOf('x');
			if((aindex != -1 && this.a(split[0], aindex)) || (xindex != -1 && this.x(split[0], xindex))) {
				return true;
			} 
			if(aindex == -1 && xindex == -1) {
				return true;
			}
			return false;
		}).toArray(String[]::new);
		secondCodeNameList = Arrays.asList(array);
		///////////////////////////// <-------------- 여기까지 구현 (2)
		return secondCodeNameList;
	}
	
	private boolean a(String word, int index) {
		if(word.length() == index + 1) {
			return false;
		}
		if(word.charAt(index + 1) == 'b' || word.charAt(index + 1) == 'x') {
			return true;
		} 
		return false;
	}
	
	private boolean x(String word, int index) {
		if(word.length() == index + 1) {
			return false;
		}
		if(word.charAt(index + 1) == 'y') {
			return true;
		} 
		return false;
	}
	
}
